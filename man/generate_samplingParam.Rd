% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/samplingParam.R
\name{generate_samplingParam}
\alias{generate_samplingParam}
\title{Generator for `samplingParam` objects}
\usage{
generate_samplingParam(
  method = c("group", "focal", "both"),
  mode = c("directed", "undirected", "max", "min", "upper", "lower", "plus", "vector"),
  obs.prob = NULL,
  focal = NULL,
  scans.to.do = "all"
)
}
\arguments{
\item{method}{Character scalar, specifies if the function should return a theoretical perfect group scan, an  empirical group scan (a similarly dimensioned matrix as Adj), or a focal scan (a vector representing the given focal's row in the group scan matrix).}

\item{mode}{Character scalar, specifies how igraph should interpret the supplied matrix. Default here is directed. Possible values are: directed, undirected, upper, lower, max, min, plus. Added vector too. See details \link[igraph]{graph_from_adjacency_matrix}.}

\item{obs.prob}{an `obsProb` object}

\item{focal}{a `focal` object. Otherwise, a `focalList` object can be provided alongside a `scans.to.do`}

\item{scans.to.do}{Optional. Only required if inputted `focal` is a `focalList` object. Either:
 \itemize{
  \item{an integer vector included in `1:total_scan` of the scans to perform}
  \item{the special case `"all"` (default) sets `scans.to.do` to `1:total_scan` and set the simulation to perform all the scans}
}}
}
\value{
an `samplingParam` object (S3 class) containing:
\itemize{
  \item{`method`: inputted `method`}
  \item{`mode`: inputted `mode`}
  \item{`scans.to.do`: inputted `scans.to.do`}
  \item{`obs.prob`: inputted `obs.prob`}
  \item{`focal`: inputted `focal`}
}
}
\description{
Generator for `samplingParam` objects
}
\examples{

set.seed(42)

n<- 5;nodes<- as.character(1:n);total_scan<- 42;
Adj<- matrix(data = 0,nrow = n,ncol = n,dimnames = list(nodes,nodes))
Adj[non.diagonal(Adj)]<- sample(0:total_scan,n*(n-1),replace = TRUE)
Adj

obs.prob.random <- generate_obsProb(Adj,total_scan,"directed",obs.prob_fun = "random")
obs.prob.constant <- generate_obsProb(Adj,total_scan,"upper",obs.prob_fun = .42)
focal.list <- generate_focalList(Adj,total_scan,focal.prob_fun = "even",all.sampled = TRUE)
focal <- generate_focal(focal.list,10)

generate_samplingParam(method = "group",obs.prob = obs.prob.random,scans.to.do = 10:30)
generate_samplingParam(method = "focal",focal = focal)
generate_samplingParam(method = "both",obs.prob = obs.prob.constant,
                        focal = focal.list,scans.to.do = 10:30)
generate_samplingParam(method = "both",obs.prob = obs.prob.constant,
                        focal = focal.list,scans.to.do = "all")
}
