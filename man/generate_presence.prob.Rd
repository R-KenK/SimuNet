% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/presenceProb.R
\name{generate_presence.prob}
\alias{generate_presence.prob}
\title{Generator for `presenceProb` objects}
\usage{
generate_presence.prob(Adj, total_scan, mode, Adj.subfun = NULL)
}
\arguments{
\item{Adj}{square integers matrix of occurrences of dyads.}

\item{total_scan}{integer, sampling effort. Note that 1/total_scan should be relatively small, increasingly small with increasing precision. Optional if using presence.prob.}

\item{mode}{Character scalar, specifies how igraph should interpret the supplied matrix. Default here is directed. Possible values are: directed, undirected, upper, lower, max, min, plus. Added vector too. See details \link[igraph]{graph_from_adjacency_matrix}.}

\item{Adj.subfun}{optional, used internally in scan-related functions. Subsetting function of the adjacency matrix. Driven by igraph "mode" argument.}
}
\value{
an `presenceProb` object (S3 class) containing:
\itemize{
  \item{P}{a [0,1] numeric matrix of probability of presence of a tie between each dyad}
  \item{Adj}{inputted `Adj`}
  \item{total_scan}{inputted `total_scan`}
  \item{mode}{inputted `mode`}
  \item{Adj.subfun}{inputted `Adj.subfun`}
}
}
\description{
Generator for `presenceProb` objects
}
\examples{
set.seed(42)

n<- 5;nodes<- as.character(1:n);total_scan<- 42;
Adj<- matrix(data = 0,nrow = n,ncol = n,dimnames = list(nodes,nodes))
Adj[non.diagonal(Adj)]<- sample(0:total_scan,n*(n-1),replace = TRUE)
Adj

generate_presence.prob(Adj,total_scan,mode = "directed")

}
