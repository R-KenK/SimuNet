% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/obs.prob_tools.R
\name{make_obs.prob}
\alias{make_obs.prob}
\title{Produce matrix of probability of observation from user-defined function}
\usage{
make_obs.prob(Adj, obs.prob_fun = NULL, Adj.subfun = non.diagonal)
}
\arguments{
\item{Adj}{square integers matrix of occurences of dyads.}

\item{obs.prob_fun}{either a user-defined function of (i,j,Adj) that output a probability of presence for the dyad, or a single value to indicate a constant observation probability}

\item{Adj.subfun}{subsetting function of the adjacency matrix. Default is non.diagonal.}
}
\value{
a matrix of probability of observation for each dyad (obs.prob)
}
\description{
Produce matrix of probability of observation from user-defined function
}
\examples{
set.seed(42)
n<- 6;nodes<- as.character(1:n);
total_scan<- 20;n.boot<- 5;
focal.list<- sample(nodes,total_scan,replace = TRUE)

Adj<- matrix(data = 0,nrow = n,ncol = n,dimnames = list(nodes,nodes))
Adj[non.diagonal(Adj)]<- round(runif(n*(n-1),0,total_scan*.50))

make_obs.prob(Adj)
make_obs.prob(Adj,obs.prob_fun = 0.2)
make_obs.prob(Adj,obs.prob_fun = function(i,j,Adj) i+j)
compute.EV<- function(graph,mode=NULL){
  if(is.matrix(graph)){
    graph<- igraph::graph.adjacency(graph,mode = mode,weighted = TRUE,add.colnames = TRUE)
  }
  EV<- igraph::eigen_centrality(graph, weights = igraph::E(graph)$weight,scale = FALSE)$vector
  if(!is.null(names(EV))){names(EV)<- igraph::vertex_attr(graph)[[1]]}
  EV
}
make_obs.prob(Adj,obs.prob_fun = function(i,j,Adj){EVs<- compute.EV(Adj,"directed");EVs[i]*EVs[j]})
}
