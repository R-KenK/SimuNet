% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SN.metrics_tools.R
\name{calculate_SNm}
\alias{calculate_SNm}
\title{Calculate a social network metric from simulation}
\usage{
calculate_SNm(
  scan,
  method = c("theoretical", "group", "focal"),
  on.what = c("scan.list", "sum", "scaled"),
  SNm.fun,
  output = c("vector", "list")
)
}
\arguments{
\item{scan}{a scan or empiScan object}

\item{method}{character vector, among "theoretical","group", and "focal", on which to calculate
the network metric}

\item{on.what}{character scalar, among "scan.list","sum","scaled", describing the type of
matrix/network on which the function should be applied}

\item{SNm.fun}{function of (matrix,mode) (for the moment) that returns a named numeric vector of
the metric(s) of interest}

\item{output}{character scalar, among "vector" and "list" (for the moment), to know if the vector
of metric should be concatenated into a vector, or outputted as a list of vector}
}
\value{
a named vector or list of vectors of the metric of interest
}
\description{
Calculate a social network metric from simulation
}
\examples{
set.seed(42)

n<- 5;nodes<- letters[1:n];total_scan<- 42;
Adj<- matrix(data = 0,nrow = n,ncol = n,dimnames = list(nodes,nodes))
Adj[non.diagonal(Adj)]<- sample(0:total_scan,n*(n-1),replace = TRUE)
Adj

theo.scans <- simu_scan(Adj,total_scan,mode = "min",scans.to.do = 1:3)
calculate_SNm(theo.scans,method = "theoretical","sum",compute.strength)

para.group.constant<- simu_samplingParam(Adj,total_scan,mode =
                                         "min",group.scan_param = 0.42)
group.constant.scans <- simu_scan(sampling.param = para.group.constant)
calculate_SNm(group.constant.scans,
  method = c("theoretical","group"),"scaled",
  compute.strength,output = "list"
 )
}
