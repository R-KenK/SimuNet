% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edgeProb.R
\name{draw_edgeProb}
\alias{draw_edgeProb}
\title{Draw edge presence probability matrix from posterior Beta distribution
Internal use.}
\usage{
draw_edgeProb(
  Adj,
  samp.effort,
  Adj.subfun = NULL,
  alpha.prior = 0.5,
  beta.prior = 0.5
)
}
\arguments{
\item{Adj}{integer matrix, the adjacency matrix (see \code{\link[=simunet]{simunet()}})}

\item{samp.effort}{integer scalar, the sampling effort (see \code{\link[=simunet]{simunet()}})}

\item{Adj.subfun}{function, the matrix subsetting function relevant for the adjacency matrix
\code{mode} (see \code{\link[=simunet]{simunet()}})}

\item{alpha.prior}{positive numeric scalar, the parameter alpha (added to shape1 in \code{rbeta()})
used in the prior beta distribution. See \code{\link[stats:Beta]{rbeta()}}}

\item{beta.prior}{positive numeric scalar, the parameter beta (added to shape2 in \code{rbeta()})
used in the prior beta distribution. See \code{\link[stats:Beta]{rbeta()}}}
}
\value{
numeric matrix of edge presence probabilities
}
\description{
Edge presence probabilities are drawn from a posterior Beta distribution
\eqn{Beta(\alpha,\beta)}, in which parameters \eqn{\alpha} and \eqn{\beta} correspond to total
(pseudo-)counts of the times when an edge was 1 and 0, respectively. By default, an uninformative
prior (Jeffrey's prior, i.e. \eqn{\alpha.prior = \beta.prior = 0.5}) is used, and is added to the
observed edge weights in \code{Adj}, so that: \deqn{\alpha = Adj + \alpha.prior, \beta = samp.effort -
Adj + \beta.prior} where \eqn{samp.effort - Adj} is a positive or null integer.
}
\details{
For Bayesian inference and conjugation, a prior beta distribution
\eqn{Beta(\alpha.prior,\beta.prior)} is used, with default \deqn{\alpha.prior = \beta.prior =
0.5} which corresponds to Jeffrey's prior. Alternative parametrization can rely on
\deqn{\alpha.prior = \beta.prior = 1} for a prior beta distribution equivalent to a uniform
distribution over \eqn{[0,1]}.

In \code{\link[=simunet]{simunet()}}, a new \code{edgeProb} is drawn before simulating binary scans. Two
\code{scanList}s outputted from an identical \code{Adj} matrix and \code{samp.effort} will result in different
\code{edgeProb}s, but these \code{edgeProb}s are drawn from the same posterior Beta distribution
\eqn{Beta(\alpha,\beta)}.

The \code{edgeProb} used is stored in the \code{scanList} outputted by \code{simunet()} as an attribute in the
attributes list \code{attrs}, and can be retrieved via \code{attrs(scan.list,"edgeProb")}).

This procedure is equivalent to drawing a \code{scanList} from a Beta-Binomial distribution
\eqn{BetaBinom(n.scans,\alpha,\beta)}, but allows "decomposing" the simulated edge weights into a
list of binary scans instead of outputting only a new weighted adjacency matrix.
}
\seealso{
\code{\link[=simunet]{simunet()}}.
}
\keyword{internal}
